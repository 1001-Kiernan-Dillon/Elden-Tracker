# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'myloginUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from MainMenuUI import Ui_MainWindow
from userfunctions import get_user_id, create_user, get_password

class Ui_LoginWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Login = QtWidgets.QPushButton(self.widget)
        self.Login.setObjectName("Login")
        self.Login.clicked.connect(self.handleLoginButton)
        self.verticalLayout.addWidget(self.Login)
        self.registerButton = QtWidgets.QPushButton(self.widget)
        self.registerButton.setObjectName("registerButton")
        self.registerButton.clicked.connect(self.handleRegisterButton)
        self.verticalLayout.addWidget(self.registerButton)
        self.horizontalLayout.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Login.setText(_translate("MainWindow", "Login"))
        self.registerButton.setText(_translate("MainWindow", "Register"))

    def handleLoginButton(self):
        username, okPressed = QtWidgets.QInputDialog.getText(MainWindow, "Login","Username:", QtWidgets.QLineEdit.Normal, "")
        if okPressed and username != '':
            password, okPressed = QtWidgets.QInputDialog.getText(MainWindow, "Login","Password:", QtWidgets.QLineEdit.Password, "")
            if okPressed:
                # Here you can add the logic to check the username and password
                # For example, using your get_password function:
                correct_password = get_password(username)
                if password == correct_password:
                    QtWidgets.QMessageBox.information(MainWindow, "Login successful", "Welcome, {}!".format(username))
                    self.mainWindow = QtWidgets.QMainWindow()  # create a new QMainWindow for the main menu
                    self.mainUi = Ui_MainWindow(username)  # create an instance of Ui_MainWindow with the username
                    self.mainUi.setupUi(self.mainWindow)  # setup the UI of the main menu window
                    self.mainWindow.show()  # show the main menu window
                    MainWindow.hide()  # hide the login window
                else:
                    QtWidgets.QMessageBox.warning(MainWindow, "Login failed", "Incorrect username or password.")

    def handleRegisterButton(self):
        username, okPressed = QtWidgets.QInputDialog.getText(MainWindow, "Register","Username:", QtWidgets.QLineEdit.Normal, "")
        if okPressed and username != '':
            email, okPressed = QtWidgets.QInputDialog.getText(MainWindow, "Register","Email:", QtWidgets.QLineEdit.Normal, "")
            if okPressed and email != '':
                password, okPressed = QtWidgets.QInputDialog.getText(MainWindow, "Register","Password:", QtWidgets.QLineEdit.Password, "")
                if okPressed:
                    # Here you can add the logic to create a new user
                    # For example, using your create_user function:
                    create_user(username, email, password)
                    QtWidgets.QMessageBox.information(MainWindow, "Registration successful", "Welcome, {}! Your account has been created.".format(username))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_LoginWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
